# C snippets
# Author by Tianyong Tang

snippet #if "#if"
#if ${1:MACRO}
${VISUAL}${0}
#endif
endsnippet

snippet #def "#define"
#define ${0:MACRO}
endsnippet

snippet #ifdef "#ifdef"
#ifdef ${1:MACRO}
${VISUAL}${0}
#endif
endsnippet

snippet #ifndef "#ifndef"
#ifndef ${1:MACRO}
#define ${1/([A-Za-z0-9_]+).*/$1/}${0}
#endif
endsnippet

snippet #inc "#include"
#include "${0:header}.h"
endsnippet

snippet "#inc <" "#include <>"
#include <${0:header}.h>
endsnippet

snippet main "main function"
int main(int argc, char **argv) {
	${VISUAL}${0}
}
endsnippet

snippet for "for"
for (${1:initialization}; ${2:condition}; ${3:increment}) {
	${VISUAL}${0}
}
endsnippet

snippet "for:([1-9]\d*|[\w_][\w\d_]*)" "for" r
int ${1:i};
for (${1/(.*)/$1/} = 0; ${1/$(.*)/$1/} < `!p snip.rv = match.group(1)`; ${1/(.*)/$1/}++) {
	${VISUAL}${0}
}
endsnippet

snippet while "while"
while (${1:condition}) {
	${VISUAL}${0}
}
endsnippet

snippet "while:([1-9]\d*|[\w_][\w\d_]*)" "while" r
int ${1:i} = `!p snip.rv = match.group(1)`;
while (${1/(.*)/$1/}--) {
	${VISUAL}${0}
}
endsnippet

snippet do "do while"
do {
	${VISUAL}${0}
} while (${1:condition});
endsnippet

snippet switch "switch"
switch (${1:expression}) {
case ${0:constant}:
	break;
default:
	break;
}
endsnippet

snippet if "if"
if (${1:condition}) {
	${VISUAL}${0}
}
endsnippet

snippet ?: "?:"
${1:condition} ? ${2:value1} : ${0:value2}
endsnippet

snippet enum "enum"
enum ${1:name} {
	${0:enumerator}
}
endsnippet

snippet /* "comment"
/* ${VISUAL}${0} */
endsnippet

snippet /** "multi-line comment"
/*
 * ${VISUAL}${0}
 */
endsnippet
